我的葫芦娃游戏概况介绍：

我的葫芦娃应用分为展示阵型和开始战斗两个部分：

展示阵型由键盘方向键的向上键和向下键控制切换阵型；

开始战斗由space键控制；

战斗开始后，葫芦娃和妖精分别按特定方式向敌方前进，相遇时以作者规定的概率决定生死，死亡后的生物体短暂停留后消失，活着的生物体继续前进（可能穿过死亡生物）
战斗直至某一方生物全部死亡（老爷爷和蛇精不参与战斗）

战斗结束，所有生物线程消亡，生物停止运动

再使用方向键的上下键可重新排布阵型，按space开始下一场战斗。

实现简介：
图形界面使用的是javaFx实现的；
游戏面板以及所有的物体（生物）首先是继承java提供的Parent类
即GamePanel和Animal继承Parent类，以便实现图形的显示和移动的控制功能

游戏面板：
在GamePanel类中，实现了整个游戏面板的控制，包括生物线程的生成和运行以及游戏地图的设置，生物阵型的摆放


生物：
葫芦娃，妖精，老爷爷等生物继承Animal类
Animal类包含一个Image成员对象和一个ImageView成员对象，用于加载生物图形和显示生物图形
还在Animal类中实现了生物的移动功能以及生物的攻击功能
其子类重载实现了生物的攻击功能；


游戏地图以及阵型的摆放实现：
为方便控制生物的位置和阵型的摆放，作者实现了一个类BattleField，其中包含成员游戏地图map，实现为一个简单的18*9的int型二维数组，通过用特定不同的数来表示每个生物体，以供区分各个生物体的位置来对其进行操作。


阵型的实现：
作者设计了FormationMaker类，作为一个阵型的构造器，内包含二维int型数组formation（阵型）及其长度和宽度，将代表生物个体的int型数组传入类的特定阵型构造函数，可以返回一个特定的阵型，而在Battlefield类中有接收这个阵型并将其摆放到map的特定位置的重载函数setFormation；
通过Battlefield和FormationMaker两个类即可实现阵型的摆放；

游戏面板GamePanel再介绍：
介绍完上面的所以类，可以对游戏面板作进一步的详细介绍：
GamePanel类包含了一个Battlefield类对象和所有的要用到的生物类的对象以及其线程（这里生物的线程可以用来操控生物，但并非是生物的具体实现）

初始化时，通过load函数将地图信息读入并根据代表各生物体的int型数据来摆放生物体。
战斗开始时，调用start函数，将所有的生物线程初始化并启动，后续都在生物体线程中运行知道战斗结束。


关于多线程并发：
并发第一点，同步：
为实现生物体在地图上不能站在同一点上，且能够判断是否与敌方生物相遇，需要给所有的生物体线程一个公共的缓冲区map（二维int数组），生物体线程通过对代表下一个位置的map内的值是否为0（代表生物体的数据不为0）来判断下一位置是否可以进入，否则等待，对敌方生物的相遇判断与之类似
并发第二点，异步：
在javaFX中，多线程同时操作主窗口界面会引发一系列问题，所以所以生物体的线程不能直接操作生物在界面上移动，这里作者实现了一个move类和Domove类，move类实际相当于一个数据结构，用于存储将要发生的移动事件，而Domove类继承Thread实现为一个监视线程，每当有生物线程要进行移动事件时，将该事件存入Domove类的move数组中，Domove类在一定的时间频率内检测数组中是否有待处理的移动事件，有则依次实现并清空数组。对生物死亡事件的做法与之类似。
